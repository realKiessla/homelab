apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Chart.Name }}
  labels:
    "helm.sh/chart": "{{ .Chart.Name }}-{{ .Chart.Version }}"
    "app.kubernetes.io/name": "{{ .Chart.Name }}"
    "app.kubernetes.io/managed-by": "{{ .Release.Service }}"
    "app.kubernetes.io/instance": "{{ .Release.Name }}"
spec:
  serviceName: {{ .Chart.Name }}
  replicas: 1
  selector:
    matchLabels:
      "app.kubernetes.io/name": "{{ .Chart.Name }}"
      "app.kubernetes.io/instance": "{{ .Release.Name }}"
  updateStrategy:
    type: OnDelete
  template:
    metadata:
      labels:
        "app.kubernetes.io/name": "{{ .Chart.Name }}"
        "app.kubernetes.io/managed-by": "{{ .Release.Service }}"
        "app.kubernetes.io/instance": "{{ .Release.Name }}"
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
{{ toYaml .Values.resources | indent 12 }}
          env:
{{ toYaml .Values.env | indent 12 }}
          volumeMounts:
          - name: "{{ .Chart.Name }}-data"
            mountPath: /data

  volumeClaimTemplates:
    - metadata:
        name: "{{ .Chart.Name }}-data"
      spec:
        storageClassName: "longhorn"
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
